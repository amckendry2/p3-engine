#ifndef PIXEL_CANVAS_H
#define PIXEL_CANVAS_H

#include <SDL2/SDL.h>
#include <iostream>

using namespace std;

class PixelCanvas{
public:
    PixelCanvas();
    ~PixelCanvas();
    bool init(SDL_Renderer* renderer, SDL_Window* window, int width, int height);
    void free();
    void render();
    void clear(SDL_Color color);
    void pset(int x, int y, SDL_Color color);
    void spr(string spriteName, int index, int x, int y);
    void setTransparentColor(SDL_Color color);
    void loadSpriteLibrary(string path);
private:   
    SDL_Renderer* mRenderer;
    SDL_Texture* mTexture;
    int pixelWidth;
    int pixelHeight;
    Uint32* pixelBuffer;
    int bufferLength;
    int bufferPitch;
    Uint32 transparentColor;
    SDL_PixelFormat* mappingFormat;
    map<string, vector<Sprite>>spriteLibrary;
};

#endif 

// Local Variables:
// mode: c++
// End:
